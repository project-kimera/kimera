name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
env:
  solution: src\Kimera.sln
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  kimeraVersion: '1.0.0'
  kimeraDataVersion: '1.0.0'
  kimeraIOVersion: '1.0.0'
  kimeraNetworkVersion: '1.0.0'

jobs:
  build:
    if: ${{ github.repository == 'project-kimera/kimera' }}
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: "5.0.x"

    - name: Restore dependencies
      run: dotnet restore ${{ env.solution }}

    - name: Build x86
      run: dotnet build ${{ env.solution }} --configuration ${{ env.buildConfiguration }} --no-restore -p:Platform="x86" -p:KimeraVersion=${{ env.kimeraVersion }}.${{ github.run_number }} -p:KimeraDataVersion=${{ env.kimeraDataVersion }}.${{ github.run_number }} -p:KimeraIOVersion=${{ env.kimeraIOVersion }}.${{ github.run_number }} -p:KimeraNetworkVersion=${{ env.kimeraNetworkVersion }}.${{ github.run_number }} -p:TreatWarningsAsErrors=True
      
    - name: Build x64
      run: dotnet build ${{ env.solution }} --configuration ${{ env.buildConfiguration }} --no-restore -p:Platform="x64" -p:KimeraVersion=${{ env.kimeraVersion }}.${{ github.run_number }} -p:KimeraDataVersion=${{ env.kimeraDataVersion }}.${{ github.run_number }} -p:KimeraIOVersion=${{ env.kimeraIOVersion }}.${{ github.run_number }} -p:KimeraNetworkVersion=${{ env.kimeraNetworkVersion }}.${{ github.run_number }} -p:TreatWarningsAsErrors=True

    #- name: Test
    #  run: dotnet test ${{ env.solution }} --configuration ${{ env.buildConfiguration }} --no-build --verbosity detailed --blame-crash
      
    - name: Upload distribution files
      uses: actions/upload-artifact@v2
      with:
        name: DemoApp-${{ github.run_number }}
        path: "MainDemo.Wpf/bin/${{ env.buildConfiguration }}"

    - name: Publish to NuGet.org
      run: dotnet nuget push ${{ github.workspace }}\*.nupkg --source https://api.nuget.org/v3/index.json -k ${{ secrets.PAT }} --skip-duplicate